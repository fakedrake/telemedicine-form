{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["sleep","ms","Promise","resolve","setTimeout","onSubmit","values","a","window","alert","JSON","stringify","mkCard","dat","Card","Header","title","Body","items","map","mkDropDown","props","Row","Col","class","label","name","id","component","selected","opts","opt","i","value","sections","message","score","mkTable","sec","reduce","x","y","parseInt","mkForm","handleSubmit","form","submitting","pristine","App","Container","initialValues","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"2PAMMA,EAAQ,SAAAC,GAAE,OAAI,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,OAEzDI,EAAQ,uCAAG,WAAMC,GAAN,SAAAC,EAAA,sEACTP,EAAM,KADG,OAEfQ,OAAOC,MAAMC,KAAKC,UAAUL,EAAQ,EAAG,IAFxB,2CAAH,sDAMRM,EAAS,SAACC,GAAD,OACb,eAACC,EAAA,EAAD,WACE,cAACA,EAAA,EAAKC,OAAN,UAAa,4BAAIF,EAAIG,UACrB,cAACF,EAAA,EAAKG,KAAN,UACGJ,EAAIK,MAAMC,IAAIC,SAKfA,EAAa,SAACC,GAAD,OACjB,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,uBAAOC,MAAM,MAAb,SAAoBH,EAAMI,UAE5B,cAACF,EAAA,EAAD,UACE,eAAC,IAAD,CAAOG,KAAML,EAAMM,GAAIC,UAAU,SAASJ,MAAM,eAAhD,UACE,wBAAQK,UAAQ,EAAhB,2BACCR,EAAMS,KAAKX,KAAI,SAACY,EAAIC,GAAL,OAAY,wBAAQC,MAAOD,EAAE,EAAjB,SAAqBD,gBAMnDG,EAAW,CAAC,CAChBlB,MAAO,8BACPE,MAAO,CACL,CAACS,GAAI,kBAAmBF,MAAO,kBAAmBK,KAAM,CAAC,MAAM,QAAQ,QACvE,CAACH,GAAI,WAAYF,MAAO,oBAAqBK,KAAM,CAAC,cAAc,sBAAsB,oBACxF,CAACH,GAAI,QAASF,MAAO,wBAAyBK,KAAM,CAAC,WAAW,4BAA4B,8BAC5F,CAACH,GAAI,gBAAiBF,MAAO,kCAAmCK,KAAM,CAAC,gCAAgC,mBAAmB,sBAC1H,CAACH,GAAI,QAASF,MAAO,eAAgBK,KAAM,CAAC,WAAW,uDAAuD,uDAC9G,CAACH,GAAI,sBAAuBF,MAAO,0CAA2CK,KAAM,CAAC,KAAM,gBAAiB,uBAE9GK,QAAS,SAACC,GACR,OAAIA,GAAS,EAAW,6BACpBA,GAAS,EAAW,qBACpBA,EAAQ,EAAW,4BAA8BA,EAAQ,IACrD,2DAKNC,EAAU,SAAC/B,GAAD,OACd,wBAAOkB,MAAM,QAAb,UACE,+BAAI,yCAAgB,2CACnBU,EAASf,KAAI,SAACmB,GAAD,OACZ,+BACE,6BAAKA,EAAItB,QACT,6BAAKsB,EAAIH,QAAQG,EAAIpB,MAAMqB,QAAO,SAACC,EAAEC,GAAH,OAASC,SAASpC,EAAOmC,EAAEd,KAAOe,SAASpC,EAAOkC,EAAEb,qBAIxFgB,EAAS,SAAC,GAAD,EAAGC,aAAH,EAAiBC,KAAjB,EAAuBC,WAAvB,EAAmCC,SAAnC,IAA6CzC,EAA7C,EAA6CA,OAA7C,OACX,gCACG4B,EAASf,IAAIP,GACZyB,EAAQ/B,GACV,8BAAMI,KAAKC,UAAUL,EAAQ,EAAG,SAcvB0C,EAXH,kBACV,eAACC,EAAA,EAAD,WACE,8CACA,cAAC,IAAD,CACE5C,SAAUA,EACV6C,cAAe,GACfC,OAAQR,QCnECS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASV,OACP,cAAC,IAAMW,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.72f75a06.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/accessible-emoji */\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { Form, Field } from 'react-final-form';\nimport { Container,Row,Col,Card } from 'react-bootstrap';\n\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nconst onSubmit = async values => {\n  await sleep(300);\n  window.alert(JSON.stringify(values, 0, 2));\n};\n\n\nconst mkCard = (dat) => (\n  <Card>\n    <Card.Header><b>{dat.title}</b></Card.Header>\n    <Card.Body>\n      {dat.items.map(mkDropDown)}\n    </Card.Body>\n  </Card>);\n\n\nconst mkDropDown = (props) => (\n  <Row>\n    <Col>\n      <label class=\"col\">{props.label}</label>\n    </Col>\n    <Col>\n      <Field name={props.id} component=\"select\" class=\"form-control\">\n        <option selected>Please Select</option>\n        {props.opts.map((opt,i) => (<option value={i+1}>{opt}</option>))}\n  </Field>\n  </Col>\n  </Row>\n);\n\nconst sections = [{\n  title: \"History of personal illness\",\n  items: [\n    {id: \"coughs_per_hour\", label: \"Coughs per hour\", opts: [\"< 5\",\"5 - 8\",\"> 8\"]},\n    {id: \"activity\", label: \"Level of activity\", opts: [\"Full active\",\"Moderate restricted\",\"Mostly sleeping\"]},\n    {id: \"sleep\", label: \"Sleeping interrutions\", opts: [\"As usual\",\"Waking up < 3 times/night\",\"Waking up > 3 times/night\"]},\n    {id: \"cough_dyspnea\", label: \"Progression of cough or dyspnea\", opts: [\"No progression or improvement\",\"Slow progression\",\"Rapid progression\"]},\n    {id: \"urine\", label: \"Urine output\", opts: [\"As usual\",\"Moderate decreased (more than half the usual output)\",\"Severe decreased (less than half the usual output)\"]},\n    {id: \"cardiac_respiratory\", label: \"History of cardiac/respiratory problems\", opts: [\"No\", \"Under control\", \"Not under control\"]}\n  ],\n  message: (score) => {\n    if (score <= 6) {return \"Follow up if deterioration\";}\n    if (score <= 9) {return \"Follow up next day\";}\n    if (score > 9) {return \"Observe clinical signs. (\" + score + \")\";}\n    return (<it>Select all the options</it>);\n  }\n}];\n\n\nconst mkTable = (values) => (\n  <table class=\"table\">\n    <tr><th>Section</th><th>Action</th></tr>\n    {sections.map((sec) => (\n      <tr>\n        <td>{sec.title}</td>\n        <td>{sec.message(sec.items.reduce((x,y) => parseInt(values[y.id]) + parseInt(values[x.id])))}</td>\n      </tr>))}\n  </table>);\n\nconst mkForm = ({ handleSubmit, form, submitting, pristine, values }) => (\n    <div>\n      {sections.map(mkCard)}\n      { mkTable(values) }\n      <pre>{JSON.stringify(values, 0, 2)}</pre>\n    </div>);\n\nconst App = () => (\n  <Container>\n    <h1>Telemedicine</h1>\n    <Form\n      onSubmit={onSubmit}\n      initialValues={{}}\n      render={mkForm}\n    />\n  </Container>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import App from './FinalForm';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}