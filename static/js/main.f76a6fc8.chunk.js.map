{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["sleep","ms","Promise","resolve","setTimeout","red_text","text","style","color","onSubmit","values","a","window","alert","JSON","stringify","mkCard","dat","Card","Header","title","Body","items","map","mkElem","mkInpt","props","undefined","opts","name","id","component","class","selected","opt","i","value","label","field","zeroScore","is_score","emergency","ambulance","score","NaN","Row","Col","combScores","x","y","sum_scores","vals","reduce","to_scores","m","ids","parseInt","sections","calc_score","sec","message","scores","type","rng","low","high","resp","months","d1","d2","Date","getFullYear","getMonth","development","ageScore","isNaN","fmtDate","date","d","getDate","isInValid","s","PdfButton","enable","Object","some","Button","variant","disabled","onClick","doc","jsPDF","autoTable","body","theme","html","save","savePdf","mkTable","ret","forEach","calcScores","msg","mkTableRow","patient_details","placeholder","input","dropdownMonde","onChange","val","InfoTable","mkForm","handleSubmit","form","submitting","pristine","App","Container","initialValues","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f76a6fc8.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/accessible-emoji */\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { Form, Field } from 'react-final-form';\nimport { Button,Container,Row,Col,Card } from 'react-bootstrap';\nimport DatePicker from 'react-date-picker';\n\nimport jsPDF from 'jspdf'\nimport 'jspdf-autotable'\n\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\nconst red_text = (text) => <b style={{color:\"red\"}}>{text}</b>\n\nconst onSubmit = async values => {\n  await sleep(300);\n  window.alert(JSON.stringify(values, 0, 2));\n};\n\n\nconst mkCard = (dat) => (\n  <Card>\n    <Card.Header><b>{dat.title}</b></Card.Header>\n    <Card.Body>\n      {dat.items.map(mkElem)}\n    </Card.Body>\n  </Card>);\n\nconst DatePickerWrapper = props =>\n      (<DatePicker\n           value={props.input.value}\n           dropdownMonde=\"select\"\n           selected={props.input.value}\n           onChange={val => props.input.onChange(val)}\n           />)\n\nconst mkInpt = (props) =>{\n    if (props.opts !== undefined) {\n        return (<Field name={props.id} component=\"select\" class=\"form-control\">\n                    <option selected>Please Select</option>\n                    {props.opts.map((opt,i) =>\n                        {if (typeof(opt) == \"string\") {\n                            return (<option value={i + 1}>{opt}</option>);\n                         } else {\n                             return (<option value={opt.value}>{opt.label}</option>)\n                         }})}\n                </Field>);\n    } else {\n        return props.field;\n    }\n}\nconst mkDropDown = (props) => (\n  <Row>\n    <Col>\n      <label class=\"col\">{props.label}</label>\n    </Col>\n    <Col>\n      {mkInpt(props)}\n    </Col>\n  </Row>\n);\n\nconst zeroScore = {is_score: true,emergency:false,ambulance:false,score:NaN}\nconst mkElem = mkDropDown;\nconst combScores = (x,y) => ({\n    is_score:true,\n    ambulance:x.ambulance || y.ambulance,\n    emergency:x.emergency || y.emergency,\n    score:x.score + y.score});\nconst sum_scores = vals => vals.reduce(combScores, {...zeroScore,score:0});\nconst to_scores = (m,ids) => ids.map((i) => {\n    switch (m[i.id]) {\n    case \"ambulance\": return {...zeroScore,ambulance:true};\n    case \"emergency\": return {...zeroScore,emergency:true};\n    default: return {...zeroScore,score:parseInt(m[i.id])};\n    }\n});\n\nconst age_opts = [\n    {label: \"2 - 12 months\", value: \"infant\"},\n    {label:\"1 - 3 years\", value:\"toddler\"},\n    {label:\"3 - 6 years\", value:\"prescool\"},\n    {label:\"6 - 12 years\", value:\"school\"},\n    {label:\"12 - 18 years\", value:\"teen\"}]\n\nconst development = (values) => {\n    const d1 = values[\"birthDate\"], d2 = new Date()\n    if (typeof(d1) == \"undefined\") return NaN;\n    var months;\n    months = (d2.getFullYear() - d1.getFullYear()) * 12;\n    months -= d1.getMonth();\n    months += d2.getMonth();\n    months = months <= 0 ? 0 : months;\n    const y = months / 12;\n\n    if (months <= 12) {return \"infant\";}\n    if (y <= 3) return \"toddler\";\n    if (y <= 6) return \"preschool\";\n    if (y <= 12) return \"school\";\n    if (y <= 18) return \"teen\";\n    return null;\n}\n\nconst physScore = (sec,values) => {\n    const rng = (low,high) => {\n        var resp = parseInt(values['resp_rate']);\n        if (resp < low) {\n            return 1;\n        } else if (resp < high) {\n            return 2;\n        } else if (resp >= high) {\n            return 3;\n        }\n        return NaN;\n    };\n    const ageScore = () => {\n        switch (development(values)) {\n        case \"infant\": return rng(60,70);\n        case \"toddler\": return rng(34,40);\n        case \"preschool\": return rng(30,36);\n        case \"school\": return rng(26,31);\n        case \"teen\": return rng(23,28);\n        default:\n            return NaN;\n        };\n    }\n    if (values['breathing_pattern'] == 'ambulance' || values['oxymeter'] == 'ambulance') {\n        return {zeroScore,ambulance:true}\n    }\n    const score = ageScore() + parseInt(values['oxymeter']);\n    if (isNaN(score)) return zeroScore\n    return {...zeroScore,score:score}\n}\nconst sections = [{\n  title: \"History of present illness\",\n  id: \"history\",\n  items: [\n    {id: \"coughs_per_hour\", label: \"Coughs per hour\", opts: [\"< 5\",\"5 - 8\",\"> 8\"]},\n    {id: \"activity\", label: \"Level of activity\", opts: [\"Full active\",\"Moderate restricted\",\"Mostly sleeping\"]},\n    {id: \"sleep\", label: \"Sleeping\", opts: [\"As usual\",\"Waking up < 3 times/night\",\"Waking up > 3 times/night\"]},\n    {id: \"cough_dyspnea\", label: \"Progression of cough or dyspnea\", opts: [\"No progression or improvement\",\"Slow progression\",\"Rapid progression\"]},\n    {id: \"urine\", label: \"Urine output\", opts: [\"As usual\",\"Moderate decreased (more than half the usual output)\",\"Severe decreased (less than half the usual output)\"]},\n    {id: \"cardiac_respiratory\", label: \"History of cardiac/respiratory problems\", opts: [\"No\", \"Under control\", \"Not under control\"]}\n  ],\n  calc_score: (sec,values) => sum_scores(to_scores(values, sec.items)),\n  message: (score) => {\n    if (score <= 6) {return \"Follow up if deterioration\";}\n    if (score <= 9) {return \"Follow up next day\";}\n    if (score > 9) {return \"Observe clinical signs.\";}\n    return (<i>Select all the options.</i>);\n  }\n},\n{\n  title: \"Observation of clinical signs\",\n  id: \"clinical\",\n  items: [\n    {id: \"mental\", label: \"Mental status\",\n     opts: [\"Normal\", \"Moderate crying / Agitated\", \"Severe irritability\",\n            {label:\"Lethargy (emergency room referral)\",value:\"emergency\"},\n            {label:\"Unresponsive (call ambulance)\",value:\"ambulance\"}]},\n    {id: \"skin_color\", label: \"Skin color\", opts: [{label:\"Normal\",value:\"0\"},\n                                                   {label:\"Motted / grey (call ambulance)\", value:\"ambulance\"}]},\n    {id: \"resp_effort\", label: \"Respiratory effort\", opts: [\"No accessory muscles\", \"1 accessory muscle\", \"\\u2265 2 accessory muscles\"]},\n    {id: \"lay_down\", label: \"Ability to lay down\", opts: [\"Comfortable when lying down\", \"Unomfortable when lying down\", \"Mostly seating\"]},\n    {id: \"speak\", label: \"Ability to speak\", opts: [\"In full sentences / babbles\", \"Only phrases / short cries\", \"Only words / grunting\"]},\n    {id: \"feed\", label: \"Ability to feed\", opts: [\"As usual decreased\", \"Decreased\", \"Severely reduced\"]}\n  ],\n  calc_score: (sec,values) => sum_scores(to_scores(values, sec.items)),\n  message: (score,scores) => {\n    if (score <= 5) {return \"Follow up in case of deterioration.\";}\n    if (score <= 7) {\n        return \"Arrange an office visit the same day if Social Circumstances >4 Otherwise Follow up in 6-8h (\" +scores['clinical'] + \")\"; // XXX\n    }\n    if (score >= 8) {return red_text(\"Emerengency Room Referral\");}\n    return (<i>Select all the options.</i>);\n  }\n},\n{\n  title: \"Pysical signs\",\n  id: \"physical\",\n  items: [\n      {id:\"breathing_pattern\", label:\"Breathing pattern\", opts:[\n          {label:\"Normal\",value:\"0\"},\n          {label:\"Shallow breathing (call ambulance)\", value:\"ambulance\"}]},\n    {id: \"oxymeter\", label: \"Pulse oxymeter\", opts:[\"> 97%\", \"94% - 97%\", \"90% - 94%\", {label:\"< 90% (Call ambulance)\", value:\"ambulance\"}]},\n    {id: \"resp_rate\", label: \"Respiratory rate while afebrile and resting\", field:<Field name=\"resp_rate\" component=\"input\" type=\"number\"/>}\n  ],\n  calc_score: physScore,\n  message: (score,scores) => {\n      if (score <= 2) {return \"Follow up the next day\";}\n      if (score == 3) {return \"Arrange visit the same day\";}\n      if (score >= 4) {return red_text(\"Emergency room referral.\");}\n      return (<i>Select all the options and date of birth.</i>);\n  },\n},\n{\n  title: \"Social circumstances\",\n  id: \"social\",\n  items: [\n      {id: \"distance\", label: \"Distance from medical center\", opts:[\"< 30 min\", \"30 - 60 min\", \"> 60 min\"]},\n      {id: \"transport\", label: \"Means of transportation\", opts: [\"Private vehicle\", {label: \"Public transportation\",value:\"3\"}]}\n  ],\n  calc_score: (sec,values) => sum_scores(to_scores(values, sec.items)),\n  message: (score,scores) => {\n      if (score <= 3) { return \"No action\" }\n      if (score >= 3) {return \"See observation of clinical signs\"}\n      return (<i>Select all the options.</i>);\n  }\n}];\n\nconst mkTableRow = (sec,values,scores) => {\n    var msg;\n    if (scores[sec.id].ambulance) {\n        msg = red_text(\"Call ambulance\");\n    } else if (scores[sec.id].emergency) {\n        msg = red_text(\"Emergency room referal\");\n    } else {\n        msg = sec.message(scores[sec.id].score,values);\n    }\n    return (\n        <tr>\n            <td>{sec.title}</td>\n            <td>{msg}</td>\n            <td>{scores[sec.id].score}</td>\n        </tr>);}\nconst calcScores = (sections,values) => {\n    var ret = {};\n    sections.forEach((sec) => {\n        ret[sec.id] = sec.calc_score(sec,values);\n    });\n    return ret;\n};\n\nfunction fmtDate(date) {\n    var d = date.getDate();\n    var m = date.getMonth() + 1; //Month from 0 to 11\n    var y = date.getFullYear();\n    return '' + y + '-' + (m<=9 ? '0' + m : m) + '-' + (d <= 9 ? '0' + d : d);\n}\n\nconst savePdf = values => {\n    const doc = new jsPDF();\n    doc.autoTable({ body : [\n        [\"Name\", values[\"firstName\"] + \" \" + values[\"lastName\"]],\n        [\"Birth\", fmtDate(values[\"birthDate\"])],\n        [\"Date generated\", fmtDate(new Date())],\n        ]})\n    doc.autoTable({ theme: 'grid', html: '#results_table' })\n    doc.save(\n        values['firstName'] + '-' + values['lastName'] + '-' + fmtDate(new Date()) + '.pdf')\n}\nconst isInValid = s => (isNaN(s.score) && !s.ambulance && !s.emergency);\nconst PdfButton = props => {\n    var enable = !Object.values(props.scores).some(isInValid);\n    const values = props.values;\n    if (enable) {\n        return (<Button variant=\"primary\" disabled={false} onClick={() => savePdf(values)} >\n                   Save as pdf\n               </Button>)\n    } else {\n        return (\n        <div>\n            <Button variant=\"primary\" disabled={true} >\n                Save as pdf\n            </Button>\n            <i>Complete the form to enable</i>\n        </div>);\n    }\n}\n\n\nconst mkTable = (values) => {\n    var  scores = calcScores(sections,values);\n    return (\n        <Card>\n            <Card.Header><b>Results</b></Card.Header>\n            <Card.Body>\n                <table class=\"table\" id=\"results_table\">\n                    <tr><th>Section</th><th>Action</th><th>Score</th></tr>\n                    {sections.map((sec) => mkTableRow(sec,values,scores))}\n                </table>\n                <PdfButton values={values} scores={scores} />\n            </Card.Body>\n        </Card>);\n  };\n\n\nconst patient_details = [\n    {label:\"First name\", field: <Field name=\"firstName\" component=\"input\" type=\"text\" placeholder=\"First Name\"/>},\n    {label:\"Last name\", field: <Field name=\"lastName\" component=\"input\" type=\"text\" placeholder=\"Last Name\"/>},\n    {label:\"Date of birth\", field: <Field name=\"birthDate\" component={DatePickerWrapper} />}\n]\nconst InfoTable = () => <div>\n{ patient_details.map((d) =>\n    <Row>\n        <label class=\"col\">{d.label}</label>\n        <Col>\n            {d.field}\n        </Col>\n    </Row>\n)}\n</div>\n\nconst mkForm = ({ handleSubmit, form, submitting, pristine, values }) => (\n    <div>\n        <Card>\n            <Card.Header><b>Patient information</b></Card.Header>\n            <Card.Body>\n                <InfoTable/>\n            </Card.Body>\n        </Card>\n        <Card>\n            { sections.map(mkCard) }\n            { mkTable(values) }\n        </Card>\n    </div>);\n// <pre>{JSON.stringify(values, 0, 2)}</pre>\n\n\nconst App = () => (\n  <Container>\n    <h1>Telemedicine</h1>\n    <i>Today: {fmtDate(new Date())}</i>\n    <Card>\n        <Card.Header><b>Usage</b></Card.Header>\n        <Card.Body>\n            This form stores <b>no information anywhere</b> so you patients' informatio is\n            safe.\n            Filling in the form will\n            update the table at the bottom of the page automatically. Once the form\n            is filled in it's entirety, you may download the table in pdf form by clicking\n            the button at the end of the page. If the button does not seem to work it may\n            be because your browser is blocking the download. If this happens check the\n            URL bar of your browser for such indications and disable the setting by\n            clicking on the icon that appears.\n        </Card.Body>\n    </Card>\n    <Form\n      onSubmit={onSubmit}\n      initialValues={{}}\n      render={mkForm}\n    />\n  </Container>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import App from './FinalForm';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}