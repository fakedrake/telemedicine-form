{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["sleep","ms","Promise","resolve","setTimeout","onSubmit","values","a","window","alert","JSON","stringify","mkCard","dat","Card","Header","title","Body","items","map","mkElem","mkInpt","props","undefined","opts","name","id","component","class","selected","opt","i","value","label","field","Row","Col","sum","vals","reduce","x","y","to_values","m","ids","parseInt","sections","calc_score","sec","message","score","scores","type","rng","low","high","resp","NaN","months","d1","d2","Date","getFullYear","getMonth","development","ageScore","fmtDate","date","d","getDate","PdfButton","enable","Object","some","isNaN","Button","variant","disabled","onClick","doc","jsPDF","autoTable","body","theme","html","save","savePdf","mkTable","ret","forEach","calcScores","mkTableRow","patient_details","placeholder","input","dropdownMonde","onChange","val","InfoTable","mkForm","handleSubmit","form","submitting","pristine","App","Container","initialValues","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"uSAUMA,EAAQ,SAAAC,GAAE,OAAI,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,OAEzDI,EAAQ,uCAAG,WAAMC,GAAN,SAAAC,EAAA,sEACTP,EAAM,KADG,OAEfQ,OAAOC,MAAMC,KAAKC,UAAUL,EAAQ,EAAG,IAFxB,2CAAH,sDAMRM,EAAS,SAACC,GAAD,OACb,eAACC,EAAA,EAAD,WACE,cAACA,EAAA,EAAKC,OAAN,UAAa,4BAAIF,EAAIG,UACrB,cAACF,EAAA,EAAKG,KAAN,UACGJ,EAAIK,MAAMC,IAAIC,SAYfC,EAAS,SAACC,GACZ,YAAmBC,IAAfD,EAAME,KACE,eAAC,IAAD,CAAOC,KAAMH,EAAMI,GAAIC,UAAU,SAASC,MAAM,eAAhD,UACI,wBAAQC,UAAQ,EAAhB,2BACCP,EAAME,KAAKL,KAAI,SAACW,EAAIC,GAChB,MAAmB,iBAARD,EACA,wBAAQE,MAAOD,EAAE,EAAjB,SAAqBD,IAEpB,wBAAQE,MAAOF,EAAIE,MAAnB,SAA2BF,EAAIG,cAIrDX,EAAMY,OAafd,EAVa,SAACE,GAAD,OACjB,eAACa,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,uBAAOR,MAAM,MAAb,SAAoBN,EAAMW,UAE5B,cAACG,EAAA,EAAD,UACGf,EAAOC,SAKRe,EAAM,SAACC,GAAD,OAAWA,EAAKC,QAAO,SAACC,EAAEC,GAAH,OAAUD,EAAIC,IAAI,IAC/CC,EAAY,SAACC,EAAEC,GAAH,OAAWA,EAAIzB,KAAI,SAACY,GAAD,OAAOc,SAASF,EAAEZ,EAAEL,SAoDnDoB,EAAW,CAAC,CAChB9B,MAAO,6BACPU,GAAI,UACJR,MAAO,CACL,CAACQ,GAAI,kBAAmBO,MAAO,kBAAmBT,KAAM,CAAC,MAAM,QAAQ,QACvE,CAACE,GAAI,WAAYO,MAAO,oBAAqBT,KAAM,CAAC,cAAc,sBAAsB,oBACxF,CAACE,GAAI,QAASO,MAAO,wBAAyBT,KAAM,CAAC,WAAW,4BAA4B,8BAC5F,CAACE,GAAI,gBAAiBO,MAAO,kCAAmCT,KAAM,CAAC,gCAAgC,mBAAmB,sBAC1H,CAACE,GAAI,QAASO,MAAO,eAAgBT,KAAM,CAAC,WAAW,uDAAuD,uDAC9G,CAACE,GAAI,sBAAuBO,MAAO,0CAA2CT,KAAM,CAAC,KAAM,gBAAiB,uBAE9GuB,WAAY,SAACC,EAAI1C,GAAL,OAAgB+B,EAAIK,EAAUpC,EAAQ0C,EAAI9B,SACtD+B,QAAS,SAACC,GACR,OAAIA,GAAS,EAAW,6BACpBA,GAAS,EAAW,qBACpBA,EAAQ,EAAW,0BACf,0DAGZ,CACElC,MAAO,gCACPU,GAAI,WACJR,MAAO,CACL,CAACQ,GAAI,cAAeO,MAAO,qBAAsBT,KAAM,CAAC,uBAAwB,qBAAsB,+BACtG,CAACE,GAAI,WAAYO,MAAO,sBAAuBT,KAAM,CAAC,8BAA+B,+BAAgC,mBACrH,CAACE,GAAI,QAASO,MAAO,mBAAoBT,KAAM,CAAC,8BAA+B,6BAA8B,0BAC7G,CAACE,GAAI,OAAQO,MAAO,kBAAmBT,KAAM,CAAC,qBAAsB,YAAa,qBACjF,CAACE,GAAI,SAAUO,MAAO,gBAAiBT,KAAM,CAAC,SAAU,6BAA8B,yBAExFuB,WAAY,SAACC,EAAI1C,GAAL,OAAgB+B,EAAIK,EAAUpC,EAAQ0C,EAAI9B,SACtD+B,QAAS,SAACC,EAAMC,GACd,OAAa,GAATD,EAAoB,sCACpBA,GAAS,EACF,gGAAiGC,EAAM,SAAe,IAEpH,GAATD,EAAoB,4BAChB,0DAGZ,CACElC,MAAO,gBACPU,GAAI,WACJR,MAAO,CACL,CAACQ,GAAI,WAAYO,MAAO,iBAAkBT,KAAK,CAAC,QAAS,YAAa,cACtE,CAACE,GAAI,YAAaO,MAAO,8CAA+CC,MAAM,cAAC,IAAD,CAAOT,KAAK,YAAYE,UAAU,QAAQyB,KAAK,aAE/HL,WAvEgB,SAACC,EAAI1C,GACnB,IAAM+C,EAAM,SAACC,EAAIC,GACb,IAAIC,EAAOX,SAASvC,EAAM,WAC1B,OAAIkD,EAAOF,EACA,EACAE,EAAOD,EACP,EACAC,GAAQD,EACR,EAEJE,KAaX,OAXiB,WACb,OA/BY,SAACnD,GACjB,IAEIoD,EAFEC,EAAKrD,EAAM,UAAesD,EAAK,IAAIC,KACzC,GAAkB,oBAAPF,EAAoB,OAAOF,IAEtCC,EAAiD,IAAvCE,EAAGE,cAAgBH,EAAGG,eAChCJ,GAAUC,EAAGI,WAGb,IAAMtB,GADNiB,GADAA,GAAUE,EAAGG,aACM,EAAI,EAAIL,GACR,GAEnB,OAAIA,GAAU,GAAY,SACtBjB,GAAK,EAAU,UACfA,GAAK,EAAU,YACfA,GAAK,GAAW,SAChBA,GAAK,GAAW,OACb,KAgBKuB,CAAY1D,IACpB,IAAK,SAAU,OAAO+C,EAAI,GAAG,IAC7B,IAAK,UAAW,OAAOA,EAAI,GAAG,IAC9B,IAAK,YAAa,OAAOA,EAAI,GAAG,IAChC,IAAK,SAAU,OAAOA,EAAI,GAAG,IAC7B,IAAK,OAAQ,OAAOA,EAAI,GAAG,IAC3B,QACI,OAAOI,KAGRQ,GAAapB,SAASvC,EAAM,WAiDrC2C,QAAS,SAACC,EAAMC,GACZ,OAAID,GAAS,EAAW,yBACX,GAATA,EAAoB,6BACpBA,GAAS,EAAW,0BAChB,4EAGd,CACElC,MAAO,uBACPU,GAAI,SACJR,MAAO,CACH,CAACQ,GAAI,WAAYO,MAAO,+BAAgCT,KAAK,CAAC,WAAY,cAAe,aACzF,CAACE,GAAI,YAAaO,MAAO,0BAA2BT,KAAM,CAAC,kBAAmB,CAACS,MAAO,oBAAoBD,MAAM,QAEpHe,WAAY,SAACC,EAAI1C,GAAL,OAAgB+B,EAAIK,EAAUpC,EAAQ0C,EAAI9B,SACtD+B,QAAS,SAACC,EAAMC,GACZ,OAAID,GAAS,EAAY,YACrBA,GAAS,EAAW,oCAChB,2DAmBd,SAASgB,EAAQC,GACb,IAAIC,EAAID,EAAKE,UACT1B,EAAIwB,EAAKJ,WAAa,EAE1B,OADQI,EAAKL,cACG,KAAOnB,GAAG,EAAI,IAAMA,EAAIA,GAAK,KAAOyB,GAAK,EAAI,IAAMA,EAAIA,GAG3E,IAYME,EAAY,SAAAhD,GACd,IAAIiD,GAAUC,OAAOlE,OAAOgB,EAAM6B,QAAQsB,KAAKC,OACzCpE,EAASgB,EAAMhB,OACrB,OAAIiE,EACQ,cAACI,EAAA,EAAD,CAAQC,QAAQ,UAAUC,UAAU,EAAOC,QAAS,kBAhBpD,SAAAxE,GACZ,IAAMyE,EAAM,IAAIC,UAChBD,EAAIE,UAAU,CAAEC,KAAO,CACnB,CAAC,OAAQ5E,EAAM,UAAgB,IAAMA,EAAM,UAC3C,CAAC,QAAS4D,EAAQ5D,EAAM,YACxB,CAAC,iBAAkB4D,EAAQ,IAAIL,UAEnCkB,EAAIE,UAAU,CAAEE,MAAO,OAAQC,KAAM,mBACrCL,EAAIM,KACA/E,EAAM,UAAgB,IAAMA,EAAM,SAAe,IAAM4D,EAAQ,IAAIL,MAAU,QAOXyB,CAAQhF,IAAlE,yBAKR,gCACI,cAACqE,EAAA,EAAD,CAAQC,QAAQ,UAAUC,UAAU,EAApC,yBAGA,gEAMNU,EAAU,SAACjF,GACb,IAAK6C,EA/CU,SAACL,EAASxC,GACzB,IAAIkF,EAAM,GAIV,OAHA1C,EAAS2C,SAAQ,SAACzC,GACdwC,EAAIxC,EAAItB,IAAMsB,EAAID,WAAWC,EAAI1C,MAE9BkF,EA0COE,CAAW5C,EAASxC,GAClC,OACI,eAACQ,EAAA,EAAD,WACI,cAACA,EAAA,EAAKC,OAAN,UAAa,0CACb,eAACD,EAAA,EAAKG,KAAN,WACI,wBAAOW,MAAM,QAAQF,GAAG,gBAAxB,UACI,+BAAI,yCAAgB,wCAAe,0CAClCoB,EAAS3B,KAAI,SAAC6B,GAAD,OA7Df,SAACA,EAAI1C,EAAO6C,GAC3B,OACI,+BACI,6BAAKH,EAAIhC,QACT,6BAAKgC,EAAIC,QAAQE,EAAOH,EAAItB,IAAIyB,KAChC,6BAAKA,EAAOH,EAAItB,SAwDeiE,CAAW3C,EAAI1C,EAAO6C,SAEjD,cAAC,EAAD,CAAW7C,OAAQA,EAAQ6C,OAAQA,WAM7CyC,EAAkB,CACpB,CAAC3D,MAAM,aAAcC,MAAO,cAAC,IAAD,CAAOT,KAAK,YAAYE,UAAU,QAAQyB,KAAK,OAAOyC,YAAY,gBAC9F,CAAC5D,MAAM,YAAaC,MAAO,cAAC,IAAD,CAAOT,KAAK,WAAWE,UAAU,QAAQyB,KAAK,OAAOyC,YAAY,eAC5F,CAAC5D,MAAM,gBAAiBC,MAAO,cAAC,IAAD,CAAOT,KAAK,YAAYE,UApOjC,SAAAL,GAAK,OACxB,cAAC,IAAD,CACIU,MAAOV,EAAMwE,MAAM9D,MACnB+D,cAAc,SACdlE,SAAUP,EAAMwE,MAAM9D,MACtBgE,SAAU,SAAAC,GAAG,OAAI3E,EAAMwE,MAAME,SAASC,WAiO3CC,EAAY,kBAAM,8BACtBN,EAAgBzE,KAAI,SAACiD,GAAD,OAClB,eAACjC,EAAA,EAAD,WACI,uBAAOP,MAAM,MAAb,SAAoBwC,EAAEnC,QACtB,cAACG,EAAA,EAAD,UACKgC,EAAElC,iBAMTiE,EAAS,SAAC,GAAD,EAAGC,aAAH,EAAiBC,KAAjB,EAAuBC,WAAvB,EAAmCC,SAAnC,IAA6CjG,EAA7C,EAA6CA,OAA7C,OACX,gCACI,eAACQ,EAAA,EAAD,WACI,cAACA,EAAA,EAAKC,OAAN,UAAa,sDACb,cAACD,EAAA,EAAKG,KAAN,UACI,cAAC,EAAD,SAGR,eAACH,EAAA,EAAD,WACMgC,EAAS3B,IAAIP,GACb2E,EAAQjF,UAgCPkG,EA1BH,kBACV,eAACC,EAAA,EAAD,WACE,8CACA,wCAAWvC,EAAQ,IAAIL,SACvB,eAAC/C,EAAA,EAAD,WACI,cAACA,EAAA,EAAKC,OAAN,UAAa,wCACb,eAACD,EAAA,EAAKG,KAAN,+BACqB,wDADrB,keAYJ,cAAC,IAAD,CACEZ,SAAUA,EACVqG,cAAe,GACfC,OAAQR,QCpSCS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASV,OACP,cAAC,IAAMW,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4c097ea3.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/accessible-emoji */\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { Form, Field } from 'react-final-form';\nimport { Button,Container,Row,Col,Card } from 'react-bootstrap';\nimport DatePicker from 'react-date-picker';\n\nimport jsPDF from 'jspdf'\nimport 'jspdf-autotable'\n\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nconst onSubmit = async values => {\n  await sleep(300);\n  window.alert(JSON.stringify(values, 0, 2));\n};\n\n\nconst mkCard = (dat) => (\n  <Card>\n    <Card.Header><b>{dat.title}</b></Card.Header>\n    <Card.Body>\n      {dat.items.map(mkElem)}\n    </Card.Body>\n  </Card>);\n\nconst DatePickerWrapper = props =>\n      (<DatePicker\n           value={props.input.value}\n           dropdownMonde=\"select\"\n           selected={props.input.value}\n           onChange={val => props.input.onChange(val)}\n           />)\n\nconst mkInpt = (props) =>{\n    if (props.opts !== undefined) {\n        return (<Field name={props.id} component=\"select\" class=\"form-control\">\n                    <option selected>Please Select</option>\n                    {props.opts.map((opt,i) =>\n                        {if (typeof(opt) == \"string\") {\n                            return (<option value={i+1}>{opt}</option>);\n                         } else {\n                             return (<option value={opt.value}>{opt.label}</option>)\n                         }})}\n                </Field>);\n    } else {\n        return props.field;\n    }\n}\nconst mkDropDown = (props) => (\n  <Row>\n    <Col>\n      <label class=\"col\">{props.label}</label>\n    </Col>\n    <Col>\n      {mkInpt(props)}\n    </Col>\n  </Row>\n);\nconst mkElem = mkDropDown;\nconst sum = (vals) => (vals.reduce((x,y) => (x + y), 0));\nconst to_values = (m,ids) => ids.map((i) => parseInt(m[i.id]));\n\nconst age_opts = [\n    {label: \"2 - 12 months\", value: \"infant\"},\n    {label:\"1 - 3 years\", value:\"toddler\"},\n    {label:\"3 - 6 years\", value:\"prescool\"},\n    {label:\"6 - 12 years\", value:\"school\"},\n    {label:\"12 - 18 years\", value:\"teen\"}]\n\nconst development = (values) => {\n    const d1 = values[\"birthDate\"], d2 = new Date()\n    if (typeof(d1) == \"undefined\") return NaN;\n    var months;\n    months = (d2.getFullYear() - d1.getFullYear()) * 12;\n    months -= d1.getMonth();\n    months += d2.getMonth();\n    months = months <= 0 ? 0 : months;\n    const y = months / 12;\n\n    if (months <= 12) {return \"infant\";}\n    if (y <= 3) return \"toddler\";\n    if (y <= 6) return \"preschool\";\n    if (y <= 12) return \"school\";\n    if (y <= 18) return \"teen\";\n    return null;\n}\n\nconst physScore = (sec,values) => {\n    const rng = (low,high) => {\n        var resp = parseInt(values['resp_rate']);\n        if (resp < low) {\n            return 1;\n        } else if (resp < high) {\n            return 2;\n        } else if (resp >= high) {\n            return 3;\n        }\n        return NaN;\n    };\n    const ageScore = () => {\n        switch (development(values)) {\n        case \"infant\": return rng(60,70);\n        case \"toddler\": return rng(34,40);\n        case \"preschool\": return rng(30,36);\n        case \"school\": return rng(26,31);\n        case \"teen\": return rng(23,28);\n        default:\n            return NaN;\n        };\n    }\n    return ageScore() + parseInt(values['oxymeter']);\n}\nconst sections = [{\n  title: \"History of present illness\",\n  id: \"history\",\n  items: [\n    {id: \"coughs_per_hour\", label: \"Coughs per hour\", opts: [\"< 5\",\"5 - 8\",\"> 8\"]},\n    {id: \"activity\", label: \"Level of activity\", opts: [\"Full active\",\"Moderate restricted\",\"Mostly sleeping\"]},\n    {id: \"sleep\", label: \"Sleeping interrutions\", opts: [\"As usual\",\"Waking up < 3 times/night\",\"Waking up > 3 times/night\"]},\n    {id: \"cough_dyspnea\", label: \"Progression of cough or dyspnea\", opts: [\"No progression or improvement\",\"Slow progression\",\"Rapid progression\"]},\n    {id: \"urine\", label: \"Urine output\", opts: [\"As usual\",\"Moderate decreased (more than half the usual output)\",\"Severe decreased (less than half the usual output)\"]},\n    {id: \"cardiac_respiratory\", label: \"History of cardiac/respiratory problems\", opts: [\"No\", \"Under control\", \"Not under control\"]}\n  ],\n  calc_score: (sec,values) => sum(to_values(values, sec.items)),\n  message: (score) => {\n    if (score <= 6) {return \"Follow up if deterioration\";}\n    if (score <= 9) {return \"Follow up next day\";}\n    if (score > 9) {return \"Observe clinical signs.\";}\n    return (<i>Select all the options.</i>);\n  }\n},\n{\n  title: \"Observation of clinical signs\",\n  id: \"clinical\",\n  items: [\n    {id: \"resp_effort\", label: \"Respiratory effort\", opts: [\"No accessory muscles\", \"1 accessory muscle\", \"\\u2265 2 accessory muscles\"]},\n    {id: \"lay_down\", label: \"Ability to lay down\", opts: [\"Comfortable when lying down\", \"Unomfortable when lying down\", \"Mostly seating\"]},\n    {id: \"speak\", label: \"Ability to speak\", opts: [\"In full sentences / babbles\", \"Only phrases / short cries\", \"Only words / grunting\"]},\n    {id: \"feed\", label: \"Ability to feed\", opts: [\"As usual decreased\", \"Decreased\", \"Severely reduced\"]},\n    {id: \"mental\", label: \"Mental status\", opts: [\"Normal\", \"Moderate crying / Agitated\", \"Severe irritability\"]}\n  ],\n  calc_score: (sec,values) => sum(to_values(values, sec.items)),\n  message: (score,scores) => {\n    if (score == 5) {return \"Follow up in case of deterioration.\";}\n    if (score <= 7) {\n        return \"Arrange an office visit the same day if Social Circumstances >4 Otherwise Follow up in 6-8h (\" +scores['clinical'] + \")\"; // XXX\n    }\n    if (score == 8) {return \"Emerengency Room Referral\";}\n    return (<i>Select all the options.</i>);\n  }\n},\n{\n  title: \"Pysical signs\",\n  id: \"physical\",\n  items: [\n    {id: \"oxymeter\", label: \"Pulse oxymeter\", opts:[\"> 97%\", \"94% - 97%\", \"90% - 94%\"]},\n    {id: \"resp_rate\", label: \"Respiratory rate while afebrile and resting\", field:<Field name=\"resp_rate\" component=\"input\" type=\"number\"/>}\n  ],\n  calc_score: physScore,\n  message: (score,scores) => {\n      if (score <= 2) {return \"Follow up the next day\";}\n      if (score == 3) {return \"Arrange visit the same day\";}\n      if (score >= 4) {return \"Emergency room referral\";}\n      return (<i>Select all the options and date of birth.</i>);\n  },\n},\n{\n  title: \"Social circumstances\",\n  id: \"social\",\n  items: [\n      {id: \"distance\", label: \"Distance from medical center\", opts:[\"< 30 min\", \"30 - 60 min\", \"> 60 min\"]},\n      {id: \"transport\", label: \"Means of transportation\", opts: [\"Private vehicle\", {label: \"Pubplic transport\",value:\"3\"}]}\n  ],\n  calc_score: (sec,values) => sum(to_values(values, sec.items)),\n  message: (score,scores) => {\n      if (score <= 3) { return \"No action\" }\n      if (score >= 3) {return \"See observation of clinical signs\"}\n      return (<i>Select all the options.</i>);\n  }\n}];\n\nconst mkTableRow = (sec,values,scores) => {\n    return (\n        <tr>\n            <td>{sec.title}</td>\n            <td>{sec.message(scores[sec.id],scores)}</td>\n            <td>{scores[sec.id]}</td>\n        </tr>);}\nconst calcScores = (sections,values) => {\n    var ret = {};\n    sections.forEach((sec) => {\n        ret[sec.id] = sec.calc_score(sec,values);\n    });\n    return ret;\n};\n\nfunction fmtDate(date) {\n    var d = date.getDate();\n    var m = date.getMonth() + 1; //Month from 0 to 11\n    var y = date.getFullYear();\n    return '' + y + '-' + (m<=9 ? '0' + m : m) + '-' + (d <= 9 ? '0' + d : d);\n}\n\nconst savePdf = values => {\n    const doc = new jsPDF();\n    doc.autoTable({ body : [\n        [\"Name\", values[\"firstName\"] + \" \" + values[\"lastName\"]],\n        [\"Birth\", fmtDate(values[\"birthDate\"])],\n        [\"Date generated\", fmtDate(new Date())],\n        ]})\n    doc.autoTable({ theme: 'grid', html: '#results_table' })\n    doc.save(\n        values['firstName'] + '-' + values['lastName'] + '-' + fmtDate(new Date()) + '.pdf')\n}\n\nconst PdfButton = props => {\n    var enable = !Object.values(props.scores).some(isNaN);\n    const values = props.values;\n    if (enable) {\n        return (<Button variant=\"primary\" disabled={false} onClick={() => savePdf(values)} >\n                   Save as pdf\n               </Button>)\n    } else {\n        return (\n        <div>\n            <Button variant=\"primary\" disabled={true} >\n                Save as pdf\n            </Button>\n            <i>Complete the form to enable</i>\n        </div>);\n    }\n}\n\n\nconst mkTable = (values) => {\n    var  scores = calcScores(sections,values);\n    return (\n        <Card>\n            <Card.Header><b>Results</b></Card.Header>\n            <Card.Body>\n                <table class=\"table\" id=\"results_table\">\n                    <tr><th>Section</th><th>Action</th><th>Score</th></tr>\n                    {sections.map((sec) => mkTableRow(sec,values,scores))}\n                </table>\n                <PdfButton values={values} scores={scores} />\n            </Card.Body>\n        </Card>);\n  };\n\n\nconst patient_details = [\n    {label:\"First name\", field: <Field name=\"firstName\" component=\"input\" type=\"text\" placeholder=\"First Name\"/>},\n    {label:\"Last name\", field: <Field name=\"lastName\" component=\"input\" type=\"text\" placeholder=\"Last Name\"/>},\n    {label:\"Date of birth\", field: <Field name=\"birthDate\" component={DatePickerWrapper} />}\n]\nconst InfoTable = () => <div>\n{ patient_details.map((d) =>\n    <Row>\n        <label class=\"col\">{d.label}</label>\n        <Col>\n            {d.field}\n        </Col>\n    </Row>\n)}\n</div>\n\nconst mkForm = ({ handleSubmit, form, submitting, pristine, values }) => (\n    <div>\n        <Card>\n            <Card.Header><b>Patient information</b></Card.Header>\n            <Card.Body>\n                <InfoTable/>\n            </Card.Body>\n        </Card>\n        <Card>\n            { sections.map(mkCard) }\n            { mkTable(values) }\n        </Card>\n    </div>);\n//       <pre>{JSON.stringify(values, 0, 2)}</pre>\n\n\nconst App = () => (\n  <Container>\n    <h1>Telemedicine</h1>\n    <i>Today: {fmtDate(new Date())}</i>\n    <Card>\n        <Card.Header><b>Usage</b></Card.Header>\n        <Card.Body>\n            This form stores <b>no information anywhere</b> so you patients informatio is\n            safe.\n            Filling in the form will\n            update the table at the bottom of the page automatically. Once the form\n            is filled in it's entirety, you may download the table in pdf form by clicking\n            the button at the end of the page. If the button does not seem to work it may\n            be because your browser is blocking the download. If this happens check the\n            URL bar of your browser for such indications and disable the setting by\n            clicking on the icon that appears.\n        </Card.Body>\n    </Card>\n    <Form\n      onSubmit={onSubmit}\n      initialValues={{}}\n      render={mkForm}\n    />\n  </Container>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import App from './FinalForm';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}